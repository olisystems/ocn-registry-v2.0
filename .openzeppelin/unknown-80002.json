{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x9fe0780DbDBA77b94317C46C2E2ee4cf892D79FB",
      "txHash": "0x197e70b0c8672ef2e93b4aa7ffb2ee5874c015b044a864665d86080530850e2f",
      "kind": "uups"
    },
    {
      "address": "0x7093154F6930151E6Df108e4A8D7ABC04595Fe31",
      "txHash": "0xadb952e43011a65e65f17abf7c61cd42a147f747054e32e6b655abbad84ed2da",
      "kind": "uups"
    }
  ],
  "impls": {
    "f04fb56c68b080a75af5fbb699834436da910ae4f6b66fc35d44e3faee7d77ca": {
      "address": "0x0321Fb0873EaFdeDe32b5C4189D6Cc97745bba9b",
      "txHash": "0xbea7c0b60dce22b8410776dc893ca685ec1ccc1da41355c0f4cbbdf0a61d0abe",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "__gap",
            "offset": 0,
            "slot": "0",
            "type": "t_array(t_uint256)50_storage",
            "contract": "OcnPaymentManager",
            "src": "contracts/OcnPaymentManager.sol:17"
          },
          {
            "label": "version",
            "offset": 0,
            "slot": "50",
            "type": "t_uint256",
            "contract": "OcnPaymentManager",
            "src": "contracts/OcnPaymentManager.sol:19"
          },
          {
            "label": "currentBaseContract",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OcnPaymentManager",
            "src": "contracts/OcnPaymentManager.sol:20"
          },
          {
            "label": "euroStablecoin",
            "offset": 0,
            "slot": "52",
            "type": "t_contract(IERC20)1368",
            "contract": "OcnPaymentManager",
            "src": "contracts/OcnPaymentManager.sol:25"
          },
          {
            "label": "stakedFunds",
            "offset": 0,
            "slot": "53",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "OcnPaymentManager",
            "src": "contracts/OcnPaymentManager.sol:27"
          },
          {
            "label": "lastPaymentTime",
            "offset": 0,
            "slot": "54",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "OcnPaymentManager",
            "src": "contracts/OcnPaymentManager.sol:28"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)24_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_struct(AccessControlStorage)34_storage": {
            "label": "struct AccessControlUpgradeable.AccessControlStorage",
            "members": [
              {
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)158_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)24_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_contract(IERC20)1368": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    }
  }
}
